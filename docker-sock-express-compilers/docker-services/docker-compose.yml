networks:
  ecoservices_express:
    driver: bridge

services:
  eco-neo-services-express-running:
    image: eco-neo-ubuntu-express-docker
    container_name: "eco-neo-services-express-running"
    ports:
      - "$DOOR_ECOSERVICES:$DOOR_ECOSERVICES"
    environment:
      - DOOR_ECOSERVICES=$DOOR_ECOSERVICES
      - PWD_CN_BLOCKTIME=$PWD_CN_BLOCKTIME
      - PWD_RESET_SERVICE=$PWD_RESET_SERVICE
    volumes:
      - $ECO_PWD/docker-sock-express-compilers/docker-services/appEcoServices.js:/opt/appEcoServices.js
      - $ECO_PWD/docker-sock-express-compilers/docker-services/run-EcoServicesExpress-RPC-SocketIo.sh:/opt/run-EcoServicesExpress-RPC-SocketIo.sh
      - $ECO_PWD/docker-sock-express-compilers/docker-services/socket-js:/opt/socket-js
      - $ECO_PWD/docker-sock-express-compilers/docker-services/eco-metadata.json:/opt/eco-metadata.json
#      - ./node_modules:/opt/node_modules
      - $LOCAL_DOCKER_SOCK:/var/run/docker.sock
      - $ECO_PWD/docker-compose-eco-network/nodes-logs:/opt/nodes-logs
    healthcheck:
      test:
        - CMD
        - bash
        - '-c'
        - exec 6<>/dev/tcp/127.0.0.1/$DOOR_ECOSERVICES
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    labels:
      autoheal: 'true'
    networks:
      - ecoservices_express
    command: /opt/run-EcoServicesExpress-RPC-SocketIo.sh

  eco-neo-autoheal-services:
    image: willfarrell/autoheal
    container_name: eco-neo-autoheal-services
    depends_on:
      - eco-neo-services-express-running
    environment:
      - AUTOHEAL_CONTAINER_LABEL=autoheal
      - AUTOHEAL_INTERVAL=5
      - DOCKER_SOCK=$LOCAL_DOCKER_SOCK
    networks:
      - ecoservices_express
    restart: always
    volumes:
      - $LOCAL_DOCKER_SOCK:/var/run/docker.sock
