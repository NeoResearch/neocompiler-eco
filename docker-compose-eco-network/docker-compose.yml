# ================================================================================
# ========== WELCOME TO THE NEOCOMPILER ECO NEO BLOCKCHAIN MICROSERVICE  =========
# ================================================================================
version: "3.7"

networks:
  neo_scan_internal:
    driver: bridge
    internal: true
  private_net:
    driver: bridge
  inside_auto_heal:
    internal: true

services:
# ================================================================================
# ================== OPEN CONTAINER WITH NEO-CLI CONSENSUS NODES AND RPC =========
  eco-neo-csharp-node1-running:
    image: eco-neo-csharp-node:latest
    container_name: "eco-neo-csharp-node1-running"
    privileged: true
    ports:
      - "20333:20333"
      - "30333:30333"
    volumes:
      - ./neo-cli/configs/protocol.json:/opt/node/neo-cli/protocolNeoCompiler.json
      - ./neo-cli/configs/config1.json:/opt/node/neo-cli/config.json
      - ./neo-cli/configs/plugins/simplePolicyConfig.json:/opt/node/neo-cli/Plugins/SimplePolicy/config.json
      - ./neo-cli/configs/plugins/appLogConfig.json:/opt/node/neo-cli/Plugins/ApplicationLogs/config.json
      - ./neo-cli/configs/plugins/rpcSecurity.json:/opt/node/neo-cli/Plugins/RpcSecurity/config.json
      - ./neo-cli/configs/plugins/rpcNep5Tracker.json:/opt/node/neo-cli/Plugins/RpcNep5Tracker/config.json
      - ./neo-cli/configs/plugins/rpcSystemAssetTracker.json:/opt/node/neo-cli/Plugins/RpcSystemAssetTracker/config.json
      - ./neo-cli/wallets/wallet1.json:/opt/node/neo-cli/wallet1.json
      - ./nodes-logs/logs-neocli-node1:/opt/node/neo-cli/Logs
    environment:
      IS_CONSENSUS: 1
      IS_RPC: 1
      NUMBER_SERVER: 1
    healthcheck:
      test:
        - CMD
        - bash
        - '-c'
        - exec 6<>/dev/tcp/127.0.0.1/20333
      interval: 20s
      timeout: 10s
      retries: 3
      start_period: 30s
    labels:
      autoheal: 'true'
    networks:
      - private_net
      - inside_auto_heal

  eco-neo-csharp-node2-running:
    image: eco-neo-csharp-node:latest
    container_name: "eco-neo-csharp-node2-running"
    privileged: true
    ports:
      - "20334:20334"
      - "30334:30334"
    volumes:
      - ./neo-cli/configs/protocol.json:/opt/node/neo-cli/protocolNeoCompiler.json
      - ./neo-cli/configs/config2.json:/opt/node/neo-cli/config.json
      - ./neo-cli/configs/plugins/simplePolicyConfig.json:/opt/node/neo-cli/Plugins/SimplePolicy/config.json
      - ./neo-cli/configs/plugins/appLogConfig.json:/opt/node/neo-cli/Plugins/ApplicationLogs/config.json
      - ./neo-cli/configs/plugins/rpcSecurity.json:/opt/node/neo-cli/Plugins/RpcSecurity/config.json
      - ./neo-cli/configs/plugins/rpcNep5Tracker.json:/opt/node/neo-cli/Plugins/RpcNep5Tracker/config.json
      - ./neo-cli/configs/plugins/rpcSystemAssetTracker.json:/opt/node/neo-cli/Plugins/RpcSystemAssetTracker/config.json
      - ./neo-cli/wallets/wallet2.json:/opt/node/neo-cli/wallet2.json
      - ./nodes-logs/logs-neocli-node2:/opt/node/neo-cli/Logs
    environment:
      IS_CONSENSUS: 1
      IS_RPC: 1
      NUMBER_SERVER: 2
    healthcheck:
      test:
        - CMD
        - bash
        - '-c'
        - exec 6<>/dev/tcp/127.0.0.1/20334
      interval: 20s
      timeout: 10s
      retries: 3
      start_period: 30s
    labels:
      autoheal: 'true'
    networks:
      - private_net
      - inside_auto_heal

  eco-neo-csharp-node3-running:
    image: eco-neo-csharp-node:latest
    container_name: "eco-neo-csharp-node3-running"
    privileged: true
    ports:
      - "20335:20335"
    volumes:
      - ./neo-cli/configs/protocol.json:/opt/node/neo-cli/protocolNeoCompiler.json
      - ./neo-cli/configs/config3.json:/opt/node/neo-cli/config.json
      - ./neo-cli/configs/plugins/simplePolicyConfig.json:/opt/node/neo-cli/Plugins/SimplePolicy/config.json
      - ./neo-cli/configs/plugins/appLogConfig.json:/opt/node/neo-cli/Plugins/ApplicationLogs/config.json
      - ./neo-cli/configs/plugins/rpcSecurity.json:/opt/node/neo-cli/Plugins/RpcSecurity/config.json
      - ./neo-cli/wallets/wallet3.json:/opt/node/neo-cli/wallet3.json
      - ./nodes-logs/logs-neocli-node3:/opt/node/neo-cli/Logs
    environment:
      IS_CONSENSUS: 1
      IS_RPC: 0
      NUMBER_SERVER: 3
    healthcheck:
      test:
        - CMD
        - bash
        - '-c'
        - exec 6<>/dev/tcp/127.0.0.1/20335
      interval: 20s
      timeout: 10s
      retries: 3
      start_period: 30s
    labels:
      autoheal: 'true'
    networks:
      - private_net
      - inside_auto_heal

  eco-neo-csharp-node4-running:
    image: eco-neo-csharp-node:latest
    container_name: "eco-neo-csharp-node4-running"
    privileged: true
    ports:
      - "20336:20336"
    volumes:
      - ./neo-cli/configs/protocol.json:/opt/node/neo-cli/protocolNeoCompiler.json
      - ./neo-cli/configs/config4.json:/opt/node/neo-cli/config.json
      - ./neo-cli/configs/plugins/simplePolicyConfig.json:/opt/node/neo-cli/Plugins/SimplePolicy/config.json
      - ./neo-cli/configs/plugins/appLogConfig.json:/opt/node/neo-cli/Plugins/ApplicationLogs/config.json
      - ./neo-cli/configs/plugins/rpcSecurity.json:/opt/node/neo-cli/Plugins/RpcSecurity/config.json
      - ./neo-cli/wallets/wallet4.json:/opt/node/neo-cli/wallet4.json
      - ./nodes-logs/logs-neocli-node4:/opt/node/neo-cli/Logs
    environment:
      IS_CONSENSUS: 1
      IS_RPC: 0
      NUMBER_SERVER: 4
    healthcheck:
      test:
        - CMD
        - bash
        - '-c'
        - exec 6<>/dev/tcp/127.0.0.1/20336
      interval: 20s
      timeout: 10s
      retries: 3
      start_period: 30s
    labels:
      autoheal: 'true'
    networks:
      - private_net
      - inside_auto_heal

  eco-neo-csharp-noderpc1-running:
    image: eco-neo-csharp-node:latest
    container_name: "eco-neo-csharp-noderpc1-running"
    privileged: true
    ports:
      - "20337:20337"
      - "30337:30337"
    volumes:
      - ./neo-cli/configs/protocol.json:/opt/node/neo-cli/protocolNeoCompiler.json
      - ./neo-cli/configs/config1RPC.json:/opt/node/neo-cli/config.json
      - ./neo-cli/configs/plugins/simplePolicyConfig.json:/opt/node/neo-cli/Plugins/SimplePolicy/config.json
      - ./neo-cli/configs/plugins/appLogConfig.json:/opt/node/neo-cli/Plugins/ApplicationLogs/config.json
      - ./neo-cli/configs/plugins/rpcSecurity.json:/opt/node/neo-cli/Plugins/RpcSecurity/config.json
      - ./neo-cli/configs/plugins/statesDumper.json:/opt/node/neo-cli/Plugins/StatesDumper/config.json
      - ./neo-cli/configs/plugins/rpcNep5Tracker.json:/opt/node/neo-cli/Plugins/RpcNep5Tracker/config.json
      - ./neo-cli/configs/plugins/rpcSystemAssetTracker.json:/opt/node/neo-cli/Plugins/RpcSystemAssetTracker/config.json
      - ./neo-cli/getIncStorage.sh:/opt/getIncStorage.sh
      - ./nodes-logs/logs-neocli-noderpc:/opt/node/neo-cli/Logs
    depends_on:
      - eco-neo-csharp-node1-running
    environment:
      IS_CONSENSUS: 0
      IS_RPC: 1
      NUMBER_SERVER: 5
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:30337"]
      interval: 20s
      timeout: 10s
      retries: 3
      start_period: 30s
    labels:
      autoheal: 'true'
    networks:
        - private_net
        - inside_auto_heal

# ================== OPEN CONTAINER WITH NEO-CLI CONSENSUS NODES AND RPC =========
# ================================================================================

# ================================================================================
# ================== BEGIN NEO-SCAN LIGHT WALLET INTERFACE AND POSTGRESS DB ======
  eco-neo-scan-full-running:
    image: "registry.gitlab.com/cityofzion/neo-scan/full:91548737-master"
    container_name: "eco-neo-scan-full-running"
    ports:
      - "4000:4000"
    #command: /bin/true 
    environment:
      PORT: 4000
      HOST: localhost
      NEO_SEEDS: "http://eco-neo-csharp-node1-running:30333;http://eco-neo-csharp-node2-running:30334;http://eco-neo-csharp-noderpc1-running:30337"
      DB_HOSTNAME: eco-neo-scan-postgresql-running
      DB_USERNAME: postgres
      DB_PASSWORD: postgres
      DB_DATABASE: neoscan_prodv
      REPLACE_OS_VARS: "true"
    depends_on:
      - eco-neo-scan-postgresql-running
      - eco-neo-csharp-node1-running
      - eco-neo-csharp-node2-running
      - eco-neo-csharp-noderpc1-running
    entrypoint: bash -c "sleep 10 && /start.sh"
    healthcheck:
      interval: 30s
      retries: 3
      start_period: 20s
      test:
        - CMD
        - bash
        - '-c'
        - exec 6<>/dev/tcp/127.0.0.1/4000
      timeout: 10s
    labels:
      autoheal: 'true'
    networks:
      - neo_scan_internal
      - private_net
      - inside_auto_heal

  eco-neo-scan-postgresql-running:
    image: postgres:10.5
    container_name: "eco-neo-scan-postgresql-running"
    expose:
      - 5432
    depends_on:
      - eco-neo-csharp-node1-running
      - eco-neo-csharp-node2-running
      - eco-neo-csharp-node3-running
      - eco-neo-csharp-node4-running
      - eco-neo-csharp-noderpc1-running
    environment:
      POSTGRES_DB: neoscan_prodv
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
    healthcheck:
      test:
        - CMD
        - bash
        - '-c'
        - exec 6<>/dev/tcp/127.0.0.1/5432
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    labels:
      autoheal: 'true'
    networks:
      - neo_scan_internal
      - inside_auto_heal
# ================== END NEO-SCAN LIGHT WALLET INTERFACE AND POSTGRESS DB ========
# ================================================================================

# ================================================================================
# ================== AUTO REAL ===================================================
  eco-neo-autoheal:
    image: willfarrell/autoheal
    container_name: eco-neo-autoheal
    depends_on:
      - eco-neo-scan-postgresql-running
      - eco-neo-csharp-node1-running
      - eco-neo-csharp-node2-running
      - eco-neo-csharp-noderpc1-running
      - eco-neo-scan-full-running
    environment:
      - AUTOHEAL_CONTAINER_LABEL=autoheal
      - AUTOHEAL_INTERVAL=5
      - DOCKER_SOCK=/var/run/docker.sock
    networks:
      - inside_auto_heal
    restart: always
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock'
# ================== AUTO REAL ===================================================
# ================================================================================


# ================================================================================
# ======================= THANKS FOR CREATING ME =================================
# ================================================================================

